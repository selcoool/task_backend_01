// Tạo bản theo thứ tự

USE test;

CREATE TABLE food_type (
    type_id INT PRIMARY KEY AUTO_INCREMENT,
    type_name VARCHAR(255)
);



CREATE TABLE food (
    food_id INT PRIMARY KEY AUTO_INCREMENT,
    food_name VARCHAR(255),
    image VARCHAR(255),
    price FLOAT,
    `desc` VARCHAR(255),
    type_id INT,
    FOREIGN KEY (type_id) REFERENCES food_type(type_id)
);


CREATE TABLE sub_food(
    sub_id INT PRIMARY KEY AUTO_INCREMENT,
    type_name VARCHAR(255),
    sub_price FLOAT,
    food_id INT,
    FOREIGN  KEY sub_food(food_id) REFERENCES food(food_id)
);


CREATE TABLE user(
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    full_name VARCHAR(255),
    email VARCHAR (255),
    password VARCHAR (255)
);



CREATE TABLE `order` (
    user_id INT,
    food_id INT,
    amount INT,
    code VARCHAR(255),
    arr_sub_id VARCHAR(255),
    FOREIGN  KEY (user_id) REFERENCES user(user_id),
    FOREIGN  KEY (food_id) REFERENCES food(food_id)
);


CREATE TABLE restaurant (
    res_id INT PRIMARY KEY AUTO_INCREMENT,
    res_name VARCHAR(255),
    Image VARCHAR(255),
    `desc` VARCHAR(255)
);



CREATE TABLE like_res (
    user_id INT,
    res_id INT,
    date_like DATETIME,
    FOREIGN KEY (user_id) REFERENCES user(user_id),
    FOREIGN KEY (res_id) REFERENCES restaurant(res_id)
);

CREATE TABLE rate_res (
    user_id INT,
    res_id INT,
    amount INT,
    date_rate DATETIME,
    FOREIGN KEY (user_id) REFERENCES user(user_id),
    FOREIGN KEY (res_id) REFERENCES restaurant(res_id)
);


--Tìm 5 người đã like nhà hàng nhiều nhất.

SELECT *, COUNT(user.user_id) as number_likes FROM user

INNER JOIN like_res 

ON user.user_id=like_res.user_id

GROUP BY user.user_id

ORDER BY number_likes DESC

LIMIT 5;

--Tìm 2 nhà hàng có lượt like nhiều nhất

SELECT *, COUNT(restaurant.res_id) as number_likes FROM restaurant

INNER JOIN like_res 

ON restaurant.res_id=like_res.user_id

GROUP BY restaurant.res_id

ORDER BY number_likes DESC

LIMIT 2;

--Tìm người đã đặt hàng nhiều nhất.

SELECT *, COUNT(order.user_id) as number_orders FROM user

INNER JOIN `order` 

ON user.user_id=order.user_id

GROUP BY order.user_id

ORDER BY number_orders DESC;


--Tìm người dùng không hoạt động trong hệ thống
(không đặt hàng, không like, không đánh giá nhà
hàng)


SELECT user.*,  IFNULL(order.user_id,'Chưa đặt hàng')as dat_hang, IFNULL(like_res.user_id,'Chưa thả like')as tha_like,IFNULL(rate_res.user_id,'Chưa đặt hàng')as danh_gia FROM user
LEFT JOIN `order`
ON user.user_id=order.user_id
LEFT JOIN like_res
ON user.user_id=like_res.user_id

LEFT JOIN rate_res
ON user.user_id=rate_res.user_id

WHERE order.user_id IS NULL  AND like_res.user_id IS NULL AND rate_res.user_id IS NULL;


